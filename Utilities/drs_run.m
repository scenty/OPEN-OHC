% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Neural Fitting app
% Created 23-Oct-2017 20:43:39
%
% This script assumes these variables are defined:
%
%   x - input data.
%   Y - target data.
function [net,tr]=drs_run(X,Y)
input = X';
t = Y';
trainFcn = 'trainbr';  % Scaled conjugate gradient backpropagation.
hiddenLayerSize = 20;
net = fitnet(hiddenLayerSize,trainFcn);
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;
net.trainParam.epochs=200;
[net,tr] = train(net,input,t,'useParallel','no','showResources','no');
yhat = net(input);
e = gsubtract(t,yhat);
performance = perform(net,t,yhat);
end
